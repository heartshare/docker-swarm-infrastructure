version: "3.7"

configs:
  dnsmasq_config:
    file: /home/{{ansible_user}}/stacks/dnsmasq/config/dnsmasq.conf

services:
  cloudflared:
    image: visibilityspots/cloudflared
    networks:
      - {{traefik_network_name}}
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
           - "node.hostname==swarm-master"

  dnsmasq:
    image: jpillora/dnsmasq:latest
    ports:
      - target: 53
        published: 53
        mode: host
        protocol: udp
      - target: {{dnsmasq_web_port}}
        published: 5380
        mode: host
    networks:
      - {{traefik_network_name}}
    configs:
       - source: dnsmasq_config
         target: /etc/dnsmasq.conf
    environment:
      - "HTTP_USER={{DNSMASQ_HTTP_USER}}"
      - "HTTP_PASS={{DNSMASQ_HTTP_PASS}}"
    logging:
      options:
        max-size: "100m"
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.dnsmasq-http.rule=Host(`{{dnsmasq_app_name}}.{{app_domain_name}}`)"
        - "traefik.http.routers.dnsmasq-http.entrypoints={{traefik_network_name}}"
        - "traefik.http.services.dnsmasq-http.loadbalancer.server.port={{dnsmasq_web_port}}"
        - "traefik.http.services.dnsmasq-http.loadbalancer.passhostheader=true"
        - "traefik.http.services.dnsmasq-http.loadbalancer.healthcheck.scheme={{dnsmasq_web_protocol}}"
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - "node.role==worker"

  pihole:
    image: pihole/pihole:latest
    hostname: "{{pihole_app_name}}"
    user: "root:root"
    ports:
      - target: {{pihole_ftl_dns_port}}
        published: 5300
        mode: host
        protocol: udp
      - target: {{pihole_web_port}}
        published: 8085
        mode: host
    volumes:
      - /etc/pihole:/etc/pihole
      - "/home/{{ansible_user}}/stacks/lighttpd/external.conf:/etc/lighttpd/external.conf"
      - dnsmasq:/etc/dnsmasq.d
    depends_on:
      - cloudflared
      - dnsmasq
    environment:
      - "TZ=Europe/London"
      - "DNS1=1.1.1.1"
      - "DNS2=8.8.4.4"
      - "REV_SERVER=true"
      - "REV_SERVER_CIDR=192.168.1.0/24" #Update these fields to match your environment
      - "REV_SERVER_TARGET={{REV_SERVER_TARGET}}"
      - "REV_SERVER_DOMAIN={{app_domain_name}}"
      - "WEBPASSWORD={{pihole_web_password}}"
    networks:
      - {{traefik_network_name}}
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.pihole-http.rule=Host(`{{pihole_app_name}}.{{app_domain_name}}`)"
        - "traefik.http.routers.pihole-http.entrypoints={{traefik_network_name}}"
        - "traefik.http.middlewares.add-admin-prefix.addprefix.prefix=/admin"
        - "traefik.http.routers.pihole-http.middlewares=add-admin-prefix"
        - "traefik.http.services.pihole-http.loadbalancer.server.port={{pihole_web_port}}"
        - "traefik.http.services.pihole-http.loadbalancer.passhostheader=true"
        - "traefik.http.services.pihole-http.loadbalancer.healthcheck.scheme={{pihole_web_protocol}}"
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.hostname==swarm-master"

  pihole_exporter:
    image: ekofr/pihole-exporter:latest
    hostname: pihole_exporter
    networks:
      - {{traefik_network_name}}
    command: "./pihole-exporter -pihole_hostname 192.168.1.152 -pihole_password {{pihole_web_password}}"
    environment:
      - "PIHOLE_PORT: {{pihole_web_port}}"
      - "PIHOLE_PASSWORD: {{pihole_web_password}}"
      - "PIHOLE_API_TOKEN: {{pihole_api_token}}"
      - "INTERVAL: 30s"
      - "PORT: {{pihole_exporter_port}}"
    ports:
      - target: {{pihole_exporter_port}}
        published: {{pihole_exporter_port}}
        mode: host
    deploy:
      labels:
        - "traefik.enable=false"
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname==swarm-master"      

networks:
  {{traefik_network_name}}:
    external: true
    name: {{traefik_network_name}}

volumes:
  pihole:
  dnsmasq:

